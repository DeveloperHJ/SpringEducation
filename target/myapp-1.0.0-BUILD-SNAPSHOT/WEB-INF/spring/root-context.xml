<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- 웹단이 아닌 Controller 밑 단에 대한 Bean 등록은 root-context.xml에서 -->
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 데이터소스 Bean 등록 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" 	value="oracle.jdbc.driver.OracleDriver" />
		<property name="url"				value="jdbc:oracle:thin:@Localhost:1521:xe" />
		<property name="username" 			value="spring" />
		<property name="password" 			value="spring1234" />
	</bean>
	
	<!-- ref(데이터소스 참조), mybatis에서 중요한 역할, 얘를 통해서 데이터소스에 접근 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/config/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:/mappers/**/*mapper.xml" />
	</bean>
	
	<!-- ref:sqlSessionFactiory 참조 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<!-- jdbcTemplate의 생성자 참조(datasource) -->
		<constructor-arg ref="dataSource" />
	</bean>
	
	<!-- 서비스를 찾아서 빈에 등록. com.kh.myapp 패키지 안에 어노테이션 찾아서 빈으로 등록. -->
	<context:component-scan base-package="com.kh.myapp" />
</beans>